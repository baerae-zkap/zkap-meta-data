name: Merge JSON Files

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - develop
  workflow_dispatch: # 수동 실행만 가능

jobs:
  # token-update:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.ACCESS_TOKEN }}

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: yarn install

  #     - name: Run merge script
  #       run: yarn token

  #     - name: Commit and push changes if any
  #       run: |
  #         git config user.name "jjackban"
  #         git config user.email "ban@baerae.com"
  #         git add .
  #         if git diff --staged --quiet; then
  #           echo "No changes to commit. Skipping push."
  #         else
  #           git commit -m "feat: auto update CI via GitHub Actions"
  #           git push origin HEAD:develop
  #         fi

  # pr-create:
  #   runs-on: ubuntu-latest
  #   needs: token-update
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.ACCESS_TOKEN }}

  #     - name: Create Pull Request using GitHub CLI
  #       run: |
  #         gh pr create \
  #           --base main \
  #           --head develop \
  #           --title "feat: auto update CI via GitHub Actions" \
  #           --body "## 자동 업데이트
  #         GitHub Actions를 통해 자동으로 생성된 PR입니다.

  #         ### 변경사항
  #         - 토큰 데이터 자동 업데이트
  #         - 생성 시간: $(date)"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  slack-notify:
    runs-on: ubuntu-latest
    # needs: pr-create
    steps:
      - name: Greet the reader
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
